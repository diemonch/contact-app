{"ast":null,"code":"var _jsxFileName = \"/Users/ravishankardhanabalan/Projects/js/contact-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetails';\nimport EditContact from './EditContact';\nimport api from '../api/contacts';\nimport { async } from 'q';\nimport { set } from 'harmony-reflect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = 'contacts';\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchHandler = searchTerm => {\n    console.log(se);\n  };\n\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n    console.log(response.data);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    console.log(response.data);\n    const {\n      id,\n      name,\n      email\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContctList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContctList); //console.log(contact);\n  };\n\n  useEffect(() => {\n    //localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(contacts));\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // console.log(retriveContacts);\n    // if(retriveContacts){\n    //   setContacts(retriveContacts);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n      console.log(allContacts);\n    };\n\n    getAllContacts();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            contacts: contacts,\n            getContactId: removeContactHandler,\n            term: searchTerm,\n            searchKeyword: searchHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          component: ContactDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(EditContact, { ...props,\n            updateContactHandler: updateContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KWlPmR1Tf5RI0dJFBfbrG8nFzbY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ravishankardhanabalan/Projects/js/contact-app/src/components/App.js"],"names":["React","useState","useEffect","uuid","BrowserRouter","Router","Switch","Route","Header","AddContact","ContactList","ContactDetail","EditContact","api","async","set","App","LOCAL_STORAGE_KEY","contacts","setContacts","searchTerm","setSearchTerm","searchHandler","console","log","se","addContactHandler","contact","request","id","response","post","data","updateContactHandler","put","name","email","map","retrieveContacts","get","removeContactHandler","delete","newContctList","filter","getAllContacts","allContacts","localStorage","setItem","JSON","stringify","props"],"mappings":"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","sourcesContent":["import React ,{ useState, useEffect} from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\nimport { BrowserRouter as Router, Switch , Route } from 'react-router-dom';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetails';\nimport EditContact from './EditContact';\nimport api from '../api/contacts';\nimport { async } from 'q';\nimport { set } from 'harmony-reflect';\n\n\nfunction App() {\n      const LOCAL_STORAGE_KEY='contacts';\n      const [contacts, setContacts] = useState([]);\n      const [searchTerm, setSearchTerm] = useState(\"\");\n      \n      const searchHandler = (searchTerm)=>{\n          console.log(se)\n      };\n      const addContactHandler= async (contact)=> {\n        const request = {\n          id:uuid(),\n          ...contact\n        }\n        const response = await api.post(\"/contacts\",request);\n        setContacts([...contacts,response.data]);\n        console.log(response.data);\n      };\n      \n      const updateContactHandler= async (contact)=> {\n      \n        const response = await api.put(`/contacts/${contact.id}`,contact);\n        console.log(response.data);\n        const {id,name,email} = response.data;\n        setContacts(\n          contacts.map((contact) => {\n            return  contact.id === id ? {...response.data} : contact ;\n          })\n        );\n      };\n\n      const retrieveContacts = async ()=> {\n          const response= await api.get(\"/contacts\");\n          return response.data;\n      }\n\n      const removeContactHandler= async (id)=> {\n        await api.delete(`/contacts/${id}`);\n        const newContctList = contacts.filter((contact)=>{\n          return contact.id !== id;\n\n        });\n        setContacts(newContctList);\n        //console.log(contact);\n      };\n      \n      useEffect (()=> {\n        //localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(contacts));\n        // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n        // console.log(retriveContacts);\n        // if(retriveContacts){\n        //   setContacts(retriveContacts);\n        // }\n        const getAllContacts = async () => {\n          const allContacts = await retrieveContacts();\n          if (allContacts) setContacts(allContacts);\n          console.log(allContacts);\n        }\n\n        getAllContacts();\n\n      },[])\n\n      useEffect (()=> {\n        localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(contacts));\n\n      },[contacts])\n  \n  return (\n    <div className=\"ui container\">\n    \n    <Router>\n     <Header />\n     <Switch>\n     <Route \n      path=\"/\"\n      exact \n      render = {(props) => (\n      <ContactList {...props} contacts={contacts} getContactId={removeContactHandler} \n      term={searchTerm}\n      searchKeyword={searchHandler}\n      />\n   \n      ) } />\n  \n      <Route \n      path=\"/add\"\n      exact \n      render = {(props) => (\n      <AddContact {...props}  addContactHandler={addContactHandler} />\n   \n      ) } />\n\n      <Route \n      path=\"/contact/:id\"\n      component={ContactDetail}\n      />\n       <Route \n      path=\"/edit\"\n      exact \n      render = {(props) => (\n      <EditContact {...props}  updateContactHandler={updateContactHandler} />\n   \n      ) } />\n\n     </Switch>\n     </Router>\n     {/* <ContactList contacts={contacts} getContactId={removeContactHandler} /> */}\n          \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}